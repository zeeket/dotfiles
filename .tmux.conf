unbind C-b
set -g prefix ´
bind-key ´ last-window
bind-key e send-prefix

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20
setw -g mode-keys vi
bind-key + copy-mode
## Use vim keybindings in copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

set-option -g history-limit 5000

# Mouse wheel scroll: scroll pane under the cursor without explicitly activating it.
# if in non-alt-screen -> always enter/use copy mode. In alt screen, if the app
# registers "complex" mouse events (e.g. vim with set ttymouse=xterm2) - then
# passthrough the event, otherwise send up/down arrows. gnome-terminal sends
# up/down only if the app doesn't register any mouse events. To get that
# behavior, replace _button_ with _any_ at the mouse flags below.

# the original wheel up/down in copy mode select the pane. redefine without select
bind-key -T copy-mode-vi WheelUpPane   send-keys -X -N3 scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X -N3 scroll-down

bind-key -n WheelUpPane \
    if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
        "send-keys -N3 -Mt=" \
        "if-shell -Ft= '#{alternate_on}' \
            'send-keys -N3 -t= Up' \
            'copy-mode -et=; send-keys -N3 -Mt='"

bind-key -n WheelDownPane \
    if-shell -Ft= "#{?pane_in_mode,1,#{?mouse_button_flag,1,#{?alternate_on,0,1}}}" \
        "send-keys -N3 -Mt=" \
        "send-keys -N3 -t= Down"
